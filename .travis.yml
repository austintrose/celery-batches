os: linux
arch:
    - amd64
    - ppc64le
language: python
dist: bionic
cache: pip
python:
  - '2.7'
  - '3.5'
  - '3.6'
  - '3.7'
  - '3.8'
  - 'pypy'
  - 'pypy3'
os:
  - linux
stages:
  - lint
  - test
env:
  - CELERY_VERSION=40
  - CELERY_VERSION=41
  - CELERY_VERSION=42
  - CELERY_VERSION=43
  - CELERY_VERSION=44
  - CELERY_VERSION=master
matrix:
  include:
    - python: '3.6'
      env: TOXENV=flake8
      stage: lint
  # Celery 4.3 added support for Python >= 3.7.
  exclude:
    - python: '3.7'
      env: CELERY_VERSION=40
    - python: '3.7'
      env: CELERY_VERSION=41
    - python: '3.7'
      env: CELERY_VERSION=42
    - python: '3.8'
      env: CELERY_VERSION=40
    - python: '3.8'
      env: CELERY_VERSION=41
    - python: '3.8'
      env: CELERY_VERSION=42
  allow_failures:
    - env: CELERY_VERSION=master
    - python: pypy
before_install:
  # If TOXENV is not set, build it from the Python and Celery versions.
  - if [[ -v CELERY_VERSION ]]; then export TOXENV=${TRAVIS_PYTHON_VERSION}-celery${CELERY_VERSION}; fi; env
  - |
        if [[ "$TOXENV" =~ "pypy" ]]; then
          export PYENV_ROOT="$HOME/.pyenv"
          if [ -f "$PYENV_ROOT/bin/pyenv" ]; then
            cd "$PYENV_ROOT" && git pull
          else
            rm -rf "$PYENV_ROOT" && git clone --depth 1 https://github.com/pyenv/pyenv.git "$PYENV_ROOT"
          fi
          "$PYENV_ROOT/bin/pyenv" install "$PYPY_VERSION"
          virtualenv --python="$PYENV_ROOT/versions/$PYPY_VERSION/bin/python" "$HOME/virtualenvs/$PYPY_VERSION"
          source "$HOME/virtualenvs/$PYPY_VERSION/bin/activate"
          which python
        fi
after_success:
  - |
          if [[ -v MATRIX_TOXENV || "$TOXENV" =~ "pypy" ]]; then
              .tox/$TOXENV/bin/coverage xml
              .tox/$TOXENV/bin/codecov -e TOXENV
          fi;
install: pip install -U tox
script: tox -v
